name: Fork Pull Request Handler

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - '.github/**'
    branches: [ 'main' ]

defaults:
  run:
    shell: PowerShell

jobs:
  PullRequestHandler:
    if: github.event.pull_request.head.repo.full_name != github.repository
    runs-on: [ windows-latest ]
    steps:
      - uses: actions/checkout@v2
      
      - name: Create Pull Request Comment
        id: CreateComment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var response = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## CI/CD\n\n*Waiting to run this check...*\n\n'
            })
            core.setOutput('comment_id', response.data.id)

      - name: Determine Changed Files
        id: ChangedFiles
        run: |
          $ErrorActionPreference = "STOP"
          $sb = [System.Text.StringBuilder]::new()
          $headers = @{             
              "Authorization" = 'token ${{ secrets.GITHUB_TOKEN }}'
              "Accept" = "application/vnd.github.baptiste-preview+json"
          }
          $ghEvent = Get-Content $ENV:GITHUB_EVENT_PATH -encoding UTF8 | ConvertFrom-Json
          $url = "$($ENV:GITHUB_API_URL)/repos/$($ENV:GITHUB_REPOSITORY)/compare/$($ghEvent.pull_request.base.sha)...$($ENV:GITHUB_SHA)"
          $response = Invoke-WebRequest -UseBasicParsing -Headers $headers -Uri $url | ConvertFrom-Json
          $filesChanged = @($response.files | ForEach-Object { $_.filename })
          $location = (Get-Location).path
          $prfolder = [GUID]::NewGuid().ToString()
          Write-Host "::set-output name=prfolder::$prfolder"
          $prPath = Join-Path $location $prFolder
          New-Item -Path $prPath -ItemType Directory | Out-Null
          Write-Host "Files Changed:"
          $filesChanged | ForEach-Object {
            Write-Host "- $_"
            $path = Join-Path $location $_
            $newPath = Join-Path $prPath $_
            $newfolder = [System.IO.Path]::GetDirectoryName($newpath)
            $extension = [System.IO.Path]::GetExtension($path)
            if ($extension -eq '.ps1' -or $extension -eq '.yaml' -or $extension -eq '.yml') {
              throw "Pull Request containing changes to scripts or workflows is not allowed from forks."
            }
            else {
              if (-not (Test-Path $newfolder)) {
                New-Item $newfolder -ItemType Directory | Out-Null
              }
              Copy-Item -Path $path -Destination $newfolder
            }
          }
          Set-Content -path (Join-Path $prPath "comment_id") -value '${{ steps.CreateComment.outputs.comment_id }}' -NoNewLine -Force

      - name: Upload Changed Files
        uses: actions/upload-artifact@v2
        with:
          name: Pull_Request_Files
          path: '${{ steps.ChangedFiles.outputs.prfolder }}/'
